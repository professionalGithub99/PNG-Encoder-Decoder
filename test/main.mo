import Encoder "../src/png/Encoder";
import Utils "../src/png/Utils";
import Buffer "mo:base/Buffer";
actor test{
  public func test_alpha_separation():async [[Nat8]]{
    var buffer=Buffer.Buffer<Buffer.Buffer<Nat8>>(3);
    var i1=Buffer.Buffer<Nat8>(3);
    var i2=Buffer.Buffer<Nat8>(3);
    var i3=Buffer.Buffer<Nat8>(3);
    i1.add(0);
    i1.add(0);
    i1.add(6);
    i1.add(255);
    i2.add(0);
    i2.add(0);
    i2.add(7);
    i2.add(255);
    i3.add(0);
    i3.add(0);
    i3.add(7);
    i3.add(255);
    buffer.add(i1);
    buffer.add(i2);
    buffer.add(i3);
    var alpha_separated_buffer=Encoder.alpha_separate(buffer,3);
    return Utils.twod_buffer_to_twod_array(alpha_separated_buffer.0);
  };
  public func test_alpha_separation_not_applicable():async [[Nat8]]{
    var buffer=Buffer.Buffer<Buffer.Buffer<Nat8>>(3);
    var i1=Buffer.Buffer<Nat8>(3);
    var i2=Buffer.Buffer<Nat8>(3);
    var i3=Buffer.Buffer<Nat8>(3);
    i1.add(0);
    i1.add(0);
    i1.add(6);
    i1.add(253);
    i2.add(0);
    i2.add(0);
    i2.add(7);
    i2.add(255);
    i3.add(0);
    i3.add(0);
    i3.add(7);
    i3.add(255);
    buffer.add(i1);
    buffer.add(i2);
    buffer.add(i3);
    var alpha_separated_buffer=Encoder.alpha_separate(buffer,3);
    return Utils.twod_buffer_to_twod_array(alpha_separated_buffer.0);
  };
};
